// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
  IN in[16], load, address[14];
  OUT out[16];

  PARTS:
    // set select/load val for each RAM4K
    DMux4Way(in=load, sel=address[12..13], a=aa, b=bb, c=cc, d=dd);

    RAM4K(in=in, load=aa, address=address[0..11], out=rama);
    RAM4K(in=in, load=bb, address=address[0..11], out=ramb);
    RAM4K(in=in, load=cc, address=address[0..11], out=ramc);
    RAM4K(in=in, load=dd, address=address[0..11], out=ramd);

    // set output register
    Mux4Way16(a=rama, b=ramb, c=ramc, d=ramd, sel=address[12..13], out=out);
}